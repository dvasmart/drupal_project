<?php

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\product_entity\Entity\ProductEntityModule;

/**
 * Implements hook_update_N().
 */
function product_entity_update_9100(&$sandbox) {
    $fields['test_status'] = BaseFieldDefinition::create('boolean')
        ->setLabel(t('Test Status'))
        ->setDefaultValue(TRUE)
        ->setSetting('on_label', 'Enabled')
        ->setDisplayOptions('form', [
          'type' => 'boolean_checkbox',
          'settings' => [
            'display_label' => FALSE,
          ],
          'weight' => 0,
        ])
        ->setDisplayConfigurable('form', TRUE)
        ->setDisplayOptions('view', [
          'type' => 'boolean',
          'label' => 'above',
          'weight' => 0,
          'settings' => [
            'format' => 'enabled-disabled',
          ],
        ])
        ->setDisplayConfigurable('view', TRUE);
}


/**
 * Add test bool field to Product entity.
 */
function product_entity_update_9101(&$sandbox) {
  $storage_definition = BaseFieldDefinition::create('boolean')
    ->setRevisionable(TRUE)
    ->setLabel(t('Test Bool Field'))
    ->setDefaultValue(TRUE)
    ->setSetting('on_label', 'Yes');
  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('test_bool_field', 'product_entity_module', 'product_entity', $storage_definition);
}


/**
 * Add second test bool field to Product entity.
 */
function product_entity_update_9102(&$sandbox) {
  $storage_definition = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Test Second Bool Field'))
    ->setDefaultValue(TRUE)
    ->setSetting('on_label', 'Enabled')
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'settings' => [
        'display_label' => TRUE,
      ],
      'weight' => 0,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayOptions('view', [
      'type' => 'boolean',
      'label' => 'above',
      'weight' => 0,
      'settings' => [
        'format' => 'enabled-disabled',
      ],
    ])
    ->setDisplayConfigurable('view', TRUE);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('test_second_bool_field', 'product_entity_module', 'product_entity', $storage_definition);
}


/**
 * Add third test bool field to Product entity.
 */
function product_entity_update_9103(&$sandbox) {
  $storage_definition = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Test Third Bool Field'))
    ->setDefaultValue(TRUE)
    ->setSetting('on_label', 'Some label')
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'settings' => [
        'display_label' => TRUE,
      ],
      'weight' => 0,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayOptions('view', [
      'type' => 'boolean',
      'label' => 'above',
      'weight' => 0,
      'settings' => [
        'format' => 'enabled-disabled',
      ],
    ])
    ->setDisplayConfigurable('view', TRUE);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('test_third_bool_field', 'product_entity_module', 'product_entity', $storage_definition);
}


/**
 * Set default value for status field.
 */
function product_entity_update_9104(&$sandbox) {
  if (!isset($sandbox['ids'])) {
    $sandbox['ids'] = \Drupal::entityQuery('product_entity_module')->execute();
  }
  if (empty($sandbox['ids'])) {
    $sandbox['#finished'] = 1;
    return t('All items updated');
  }
  $id = array_shift($sandbox['ids']);
  $entity = ProductEntityModule::load($id);
  $entity->set('status', TRUE);
  $entity->save();
  $sandbox['#finished'] = 0;
  return t('@name updated.', ['@name' => $entity->label()]);
}


/**
 * Add flag field to Product entity.
 */
function product_entity_update_9105(&$sandbox) {
  $storage_definition = BaseFieldDefinition::create('boolean')
    ->setRevisionable(TRUE)
    ->setLabel(t('Flag'))
    ->setDefaultValue(TRUE)
    ->setSetting('on_label', 'Yes');
  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('flag', 'product_entity_module', 'product_entity', $storage_definition);
}
